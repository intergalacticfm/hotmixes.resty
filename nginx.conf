lua_ssl_verify_depth 2;
lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

lua_package_path '/usr/local/openresty/site/luafilesystem/?.lua;;';

server {
    listen       8080;
    server_name  localhost;

    resolver 4.2.2.3;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location /style/ {
        root /app;
        default_type text/css;
    }

    location /img/ {
        root /app;
        default_type image;
    }

    location /stuff/ {
        root /app;
        add_header Content-disposition "attachment; filename=$1";
    }

    location / {
        root /app/templates;
        default_type text/html; 

        content_by_lua_block {
            local lfs = require 'lfs_ffi'
            local template = require "resty.template"
			
            local files = {}
            local dirs = {}
            local request_uri = ''
            
            if ngx.var.request_uri == '/' then
                request_uri = ngx.var.request_uri
            else
                request_uri = ngx.var.request_uri .. '/'
            end

            local this_dir = '/app/stuff'
            local path = this_dir .. request_uri

            -- lfs.dir() doesn't work, so we use this function to list contents of a path
            function scandir(directory)
                local i, t, popen = 0, {}, io.popen
                local pfile = popen('ls "'..directory..'"')
                for filename in pfile:lines() do
                    i = i + 1
                    t[i] = filename
                end
                pfile:close()
                return t
            end

            for i, file in ipairs( scandir( path ) ) do
                if lfs.attributes( path .. file,"mode" ) == "file" then
                    table.insert( files, file )
                elseif lfs.attributes( path .. file,"mode" ) == "directory" then 
                    table.insert( dirs, file )
                end
            end

            local path_uri = '/stuff' .. request_uri

            template.render("view.html", {
                local_uri = request_uri,
                local_path = path_uri,
                local_files = files,
                local_dirs = dirs
            })
        }
    }
    

}

